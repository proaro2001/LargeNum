Sun Sep 11 17:07:24 UTC 2022
Linux LinuxMachine 4.19.76-linuxkit #1 SMP Tue May 26 11:42:35 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
uid=1000(cssuwbstudent) gid=1000(cssuwbstudent) groups=1000(cssuwbstudent),10(wheel)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
23,460test1 complete
test2 complete
test3 complete
test4 complete
test5 complete
test6 complete
Done.
=====================================================
3. clang-tidy warnings are fixed
=====================================================
13926 warnings and 1 error generated.
Error while processing /home/cssuwbstudent/pisan/bitbucket/pisan342/ass2-largenum-solution/largenum.cpp.
25462 warnings and 2 errors generated.
Error while processing /home/cssuwbstudent/pisan/bitbucket/pisan342/ass2-largenum-solution/main.cpp.
/usr/include/wchar.h:35:10: error: 'stddef.h' file not found [clang-diagnostic-error]
#include <stddef.h>
         ^~~~~~~~~~
Suppressed 25462 warnings (25462 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
Found compiler error(s).
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./largenum.cpp
Running clang-format on ./main.cpp
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==690== Memcheck, a memory error detector
==690== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==690== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==690== Command: ./a.out
==690== Parent PID: 648
==690== 
==690== 
==690== HEAP SUMMARY:
==690==     in use at exit: 0 bytes in 0 blocks
==690==   total heap usage: 18 allocs, 18 frees, 78,237 bytes allocated
==690== 
==690== All heap blocks were freed -- no leaks are possible
==690== 
==690== For lists of detected and suppressed errors, rerun with: -s
==690== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
=====================================================
7. Tests have full code coverage
=====================================================
File '/home/cssuwbstudent/pisan/bitbucket/pisan342/ass2-largenum-solution/largenum.cpp':
Name                                                                                                                                                                                                 Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
operator<<(std::ostream&, LargeNum const&)                                                                                                                                                                10       0 100.00%        13       0 100.00%         8       0 100.00%
LargeNum::LargeNum(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                 9       0 100.00%        11       0 100.00%         8       0 100.00%
LargeNum::LargeNum(int)                                                                                                                                                                                    1       0 100.00%         1       0 100.00%         0       0   0.00%
LargeNum::negate()                                                                                                                                                                                         3       0 100.00%         6       0 100.00%         2       0 100.00%
LargeNum::isZero() const                                                                                                                                                                                   5       0 100.00%         3       0 100.00%         6       1  83.33%
LargeNum::operator==(LargeNum const&) const                                                                                                                                                                3       0 100.00%         3       0 100.00%         4       0 100.00%
LargeNum::operator!=(LargeNum const&) const                                                                                                                                                                1       0 100.00%         1       0 100.00%         0       0   0.00%
LargeNum::operator>(LargeNum const&) const                                                                                                                                                                31       0 100.00%        28       0 100.00%        22       1  95.45%
LargeNum::operator<(LargeNum const&) const                                                                                                                                                                 3       0 100.00%         3       0 100.00%         4       1  75.00%
LargeNum::operator<=(LargeNum const&) const                                                                                                                                                                3       0 100.00%         3       0 100.00%         4       2  50.00%
LargeNum::operator>=(LargeNum const&) const                                                                                                                                                                3       0 100.00%         3       0 100.00%         4       0 100.00%
LargeNum::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)             12       0 100.00%        19       0 100.00%         8       0 100.00%
LargeNum::operator+(LargeNum const&) const                                                                                                                                                                12       0 100.00%        15       1  93.33%         8       0 100.00%
LargeNum::subtract(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)        13       1  92.31%        20       0 100.00%         8       1  87.50%
LargeNum::operator-(LargeNum const&) const                                                                                                                                                                14       0 100.00%        18       1  94.44%        10       0 100.00%
LargeNum::operator*(LargeNum const&) const                                                                                                                                                                29       0 100.00%        33       1  96.97%        22       3  86.36%
LargeNum::operator/(LargeNum const&) const                                                                                                                                                                27       1  96.30%        33       2  93.94%        20       3  85.00%
LargeNum::operator++()                                                                                                                                                                                     7       0 100.00%        13       0 100.00%         4       0 100.00%
LargeNum::operator++(int)                                                                                                                                                                                  1       0 100.00%         5       0 100.00%         0       0   0.00%
LargeNum::operator--()                                                                                                                                                                                     7       0 100.00%        13       0 100.00%         4       0 100.00%
LargeNum::operator--(int)                                                                                                                                                                                  1       0 100.00%         5       0 100.00%         0       0   0.00%
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                    195       2  98.97%       249       5  97.99%       146      12  91.78%

File '/home/cssuwbstudent/pisan/bitbucket/pisan342/ass2-largenum-solution/main.cpp':
Name                                                                                                                                                                                                 Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
test1()                                                                                                                                                                                                    1       0 100.00%        27       5  81.48%         0       0   0.00%
test2()                                                                                                                                                                                                    1       0 100.00%         9       6  33.33%         0       0   0.00%
test3()                                                                                                                                                                                                    1       0 100.00%        26      14  46.15%         0       0   0.00%
test4()                                                                                                                                                                                                    1       0 100.00%        10       6  40.00%         0       0   0.00%
test5()                                                                                                                                                                                                    1       0 100.00%        10       7  30.00%         0       0   0.00%
test6()                                                                                                                                                                                                    1       0 100.00%        19      13  31.58%         0       0   0.00%
main                                                                                                                                                                                                       1       0 100.00%         9       0 100.00%         0       0   0.00%
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                      7       0 100.00%       110      51  53.64%         0       0   0.00%
...
[deleted]
...
Sun Sep 11 17:07:32 UTC 2022
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
